{"version":3,"file":"select-a11y.js","sources":["../src/select-a11y.js"],"sourcesContent":["import \"./select-a11y.scss\";\n\nconst text = {\n  help: 'Utilisez la tabulation (ou les touches flèches) pour naviguer dans la liste des suggestions',\n  placeholder: 'Rechercher dans la liste',\n  noResult: 'Aucun résultat',\n  results: '{x} suggestion(s) disponibles',\n  deleteItem: 'Supprimer {t}',\n  delete: 'Supprimer',\n  clear: 'Vider',\n};\n\nconst matches = Element.prototype.matches;\nlet closest = Element.prototype.closest;\n\nif (!closest) {\n  closest = function (s) {\n    var el = this;\n\n    do {\n      if (matches.call(el, s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nconst DEEP_CLONE = true;\nconst SILENTLY = false;\n\n/**\n * Deep copy of an {@link Iterable} as {@link Array}\n * @template {HTMLElement} T\n * @param {Iterable<T>} array\n * @returns {Array<T>}\n */\nfunction deepCopy (array) {\n  return /** @type {Array<T>} */ (Array.from(array).map(option => option.cloneNode(DEEP_CLONE)));\n}\n\nexport class Select {\n  /**\n   * @param {HTMLSelectElement} el - Select HTML element\n   * @param {object} [options] - options to control select-a11y behavior\n   * @param {object} [options.text] - texts used in the class\n   * @param {string} [options.text.help] - helper text used for assistive technologies\n   * @param {string} [options.text.placeholder] - search input placeholder\n   * @param {string} [options.text.noResult] - text shown when there is no option\n   * @param {string} [options.text.results] - text to show the number of results available for assistive technologies\n   * @param {string} [options.text.deleteItem] - text used as title for \"x\" close button for selected option (see options.showSelected below)\n   * @param {string} [options.text.delete] - text used for assistive technologies for the \"x\" close button for selected option (see options.showSelected below)\n   * @param {string} [options.text.clear] - text used for assistive technologies for the \"x\" clear button for clearable single select (see options.clearable below)\n   * @param {FillSuggestions} [options.fillSuggestions] - fill suggestions based on search input content\n   * @param {boolean} [options.showSelected=true] - show selected options for multiple select\n   * @param {boolean} [options.useLabelAsButton=false] - use label as button even for single select.\n   * Only work if select value is set to `null` otherwise its value defaults to first option.\n   * @param {boolean} [options.clearable=false] - show clear icon for single select.\n   * Only work if select value is set. It resets it to `null`.\n   */\n  constructor(el, options) {\n\n    /** @type {HTMLSelectElement} */\n    this.el = el;\n\n    /** @type {HTMLLabelElement | null} */\n    this.label = document.querySelector(`label[for=${el.id}]`);\n\n    this.id = el.id;\n    this.open = false;\n    this.multiple = this.el.multiple;\n    this.search = '';\n\n    /** @type {Array<HTMLElement>} */\n    this.suggestions = [];\n\n    this.focusIndex = null;\n\n    const passedOptions = Object.assign({}, options);\n    const textOptions = Object.assign({}, text, passedOptions.text);\n    delete passedOptions.text;\n    this._defaultSearch = this._defaultSearch.bind(this);\n\n    this._options = Object.assign({\n      text: textOptions,\n      showSelected: true,\n      fillSuggestions: this._defaultSearch,\n      useLabelAsButton: false,\n      clearable: false,\n    }, passedOptions);\n\n    this._handleFocus = this._handleFocus.bind(this);\n    this._handleInput = this._handleInput.bind(this);\n    this._handleKeyboard = this._handleKeyboard.bind(this);\n    this._handleOpener = this._handleOpener.bind(this);\n    this._handleClear = this._handleClear.bind(this);\n    this._handleReset = this._handleReset.bind(this);\n    this._handleSuggestionClick = this._handleSuggestionClick.bind(this);\n    this._positionCursor = this._positionCursor.bind(this);\n    this._removeOption = this._removeOption.bind(this);\n    this.setText = this.setText.bind(this);\n    this._setButtonText = this._setButtonText.bind(this);\n\n    if(!this.multiple) {\n      const hasSelectedOption = Array.from(this.el.options).some(option => option.selected);\n      if (this._options.useLabelAsButton && !hasSelectedOption) {\n        const option = document.createElement('option');\n        option.innerText = this.label?.innerText ?? \"\";\n        option.setAttribute('value', '');\n        option.setAttribute('selected', 'selected');\n        option.setAttribute('disabled', 'disabled');\n        option.setAttribute('hidden', 'hidden');\n        this.el.options.add(option, 0);\n      }\n    }\n\n    /**\n     * Select original options at initialization of the component.\n     * They are never modified and are used to handle reset.\n     * @type {Array<HTMLOptionElement>}\n     */\n    console.log(Array.from(this.el.options).map(option => ({ value: option.value, parentNode: option.parentNode })));\n    this.originalOptions =  Array.from(this.el.options);\n    console.log(Array.from(this.originalOptions).map(option => ({ value: option.value, parentNode: option.parentNode })));\n\n    /**\n     * Select original options at initialization of the component.\n     * They are updated based on select / unselect of options but no options are added or removed to it.\n     * This is the set of options passed to {@link FillSuggestions} callback.\n     * @type {Array<HTMLOptionElement>}\n     */\n    this.updatedOriginalOptions = Array.from(this.el.options);\n\n    /**\n     * Select current options. These can be completely differents options than {@link originalOptions}\n     * if the provided promise fetches some from an API.\n     * @type {Array<HTMLOptionElement>}\n     */\n    this.currentOptions = Array.from(this.el.options);\n\n    this._disable();\n    this.button = this._createButton();\n    this._setButtonText();\n    this.clearButton = this._createClearButton();\n    this.liveZone = this._createLiveZone();\n    this.overlay = this._createOverlay();\n    this.wrap = this._wrap();\n\n    if (this.multiple && this._options.showSelected) {\n      this.selectedList = this._createSelectedList();\n      this._updateSelectedList();\n\n      this.selectedList.addEventListener('click', this._removeOption);\n    }\n\n    this.button.addEventListener('click', this._handleOpener);\n    this.clearButton.addEventListener('click', this._handleClear);\n    this.wrap.addEventListener('keydown', this._handleKeyboard);\n    document.addEventListener('blur', this._handleFocus, true);\n\n    if (this.el.form) {\n      this.el.form.addEventListener('reset', this._handleReset);\n    }\n  }\n\n  /**\n   * Update texts with new texts\n   * @param {object} newText\n   */\n  setText(newText) {\n    Object.assign(this._options.text, newText);\n  }\n\n  /**\n   * Select new value\n   * @param {string} value option value\n   */\n  selectOption(value, dispatchEvent = true) {\n    const optionIndex = this.currentOptions.findIndex(option => option.value === value);\n    if (optionIndex === -1) {\n      return;\n    }\n    const shouldClose = this.multiple ? false : true;\n    this._toggleSelection(optionIndex, shouldClose, dispatchEvent);\n  }\n\n  /**\n   * Select new value without dispatching the change Event\n   * @param {string} value option value\n   */\n  selectOptionSilently(value) {\n    this.selectOption(value, SILENTLY);\n  }\n\n\n  _createButton() {\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.setAttribute('aria-expanded', this.open ? \"true\" : \"false\");\n    button.className = 'select-a11y-button';\n    const text = document.createElement('span');\n    text.className = 'select-a11y-button__text';\n\n    if (this.label && !this.label.id) {\n      this.label.id = `${this.el.id}-label`;\n    }\n    button.setAttribute('id', this.el.id + '-button');\n    button.setAttribute('aria-labelledby', this.label?.id + ' ' + button.id);\n    text.innerHTML = \"&nbsp;\";\n\n    button.appendChild(text);\n    button.insertAdjacentHTML('beforeend', '<span class=\"select-a11y-button__icon\" aria-hidden=\"true\"></span>');\n    return button;\n  }\n\n  _createClearButton() {\n    const clear = document.createElement('button');\n    clear.setAttribute('type', 'button');\n    clear.setAttribute('aria-label', this._options.text.clear);\n    clear.className = 'select-a11y-button__clear';\n    return clear;\n  }\n\n  _createLiveZone() {\n    const live = document.createElement('p');\n    live.setAttribute('aria-live', 'polite');\n    live.classList.add('sr-only');\n\n    return live;\n  }\n\n  _createOverlay() {\n    const container = document.createElement('div');\n    container.classList.add('select-a11y__overlay');\n\n    const suggestions = document.createElement('div');\n    suggestions.classList.add('select-a11y-suggestions');\n    suggestions.id = `a11y-${this.id}-suggestions`;\n\n    container.innerHTML = `\n      <p id=\"a11y-usage-${this.id}-js\" class=\"sr-only\">${this._options.text.help}</p>\n      <label for=\"a11y-${this.id}-js\" class=\"sr-only\">${this._options.text.placeholder}</label>\n      <input type=\"search\" id=\"a11y-${this.id}-js\" class=\"select-a11y__input ${this.el.className}\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" placeholder=\"${this._options.text.placeholder}\" aria-describedby=\"a11y-usage-${this.id}-js\">\n    `;\n\n    container.appendChild(suggestions);\n\n    this.list = suggestions;\n    this.list.addEventListener('click', this._handleSuggestionClick);\n\n    /** @type {HTMLInputElement | null} */\n    this.input = container.querySelector('input');\n\n    if(this.input) {\n      this.input.addEventListener('input', this._handleInput);\n      this.input.addEventListener('focus', this._positionCursor, true);\n    }\n\n    return container;\n  }\n\n  _createSelectedList() {\n    const list = document.createElement('ul');\n    list.className = 'select-a11y__selected-list';\n\n    return list;\n  }\n\n  _disable() {\n    this.el.setAttribute('tabindex', '-1');\n  }\n\n  /**\n   *\n   * @typedef Suggestion\n   * @property {boolean} hidden - if suggestion is hidden\n   * @property {boolean} disabled - if suggestion is disabled\n   * @property {boolean} selected - if suggestion is selected\n   * @property {string} label - label shown\n   * @property {any} value - suggestion value\n   * @property {string} [image] - suggestion image\n   * @property {string} [alt] - suggestion image alt\n   * @property {string} [helper] - suggestion helper\n   * @property {string} [description] - suggestion description\n   * @property {boolean} [showIcon] - suggestion recommended\n   */\n\n  /**\n   *\n   * @param {HTMLOptionElement} option\n   * @returns {Suggestion} - a suggestion\n   */\n  _mapToSuggestion(option) {\n    const parentOptgroup = option.closest('optgroup');\n    const groupLabel = parentOptgroup ? parentOptgroup.label : null;\n  \n    return {\n      hidden: option.hidden,\n      disabled: option.disabled,\n      selected: option.hasAttribute('selected'),\n      label: option.label,\n      value: option.value,\n      image: option.dataset.image,\n      alt: option.dataset.alt,\n      helper: option.dataset.helper,\n      description: option.dataset.description,\n      showIcon: option.dataset.showIcon,\n      group: groupLabel\n    };\n  }\n\n  /**\n   *\n   * @param {Suggestion} suggestion\n   * @returns {HTMLOptionElement} - an option\n   */\n  _mapToOption(suggestion) {\n    const option = document.createElement('option');\n    option.label = suggestion.label;\n    option.value = suggestion.value;\n    if(suggestion.hidden) {\n      option.setAttribute('hidden', 'hidden');\n    }\n    if(suggestion.disabled) {\n      option.setAttribute('disabled', 'disabled');\n    }\n    if(suggestion.selected) {\n      option.setAttribute('selected', 'selected');\n    }\n    if(suggestion.image) {\n      option.dataset.image = suggestion.image;\n    }\n    if(suggestion.alt) {\n      option.dataset.alt = suggestion.alt;\n    }\n    if(suggestion.description) {\n      option.dataset.description = suggestion.description\n    }\n    if (suggestion.helper) {\n      option.dataset.helper = suggestion.helper\n    }\n    if (suggestion.showIcon) {\n      option.dataset.showIcon = suggestion.showIcon\n    }\n    if (suggestion.group) {\n      option.dataset.group = suggestion.group\n    }\n    return option;\n  }\n\n  /**\n   * @callback FillSuggestions\n   * @param {string} search - searched term\n   * @param {Array<HTMLOptionElement>} options - original select options\n   * @returns {Promise<Array<Suggestion>>} suggestions\n   */\n\n  /**\n   *\n   * @type {FillSuggestions}\n   */\n  _defaultSearch(search, options) {\n    const newOptions = options.filter(option => {\n      const text = option.label || option.value;\n      return text.toLocaleLowerCase().indexOf(search) !== -1;\n    }).map(this._mapToSuggestion);\n    return Promise.resolve(newOptions);\n  }\n\n  /**\n   *\n   * @returns {Promise<Array<Suggestion>>}\n   */\n  async _fillSuggestions() {\n    const search = this.search.toLowerCase();\n\n    // loop over the\n    const suggestions = await this._options.fillSuggestions(search, this.updatedOriginalOptions);\n    this.currentOptions = suggestions.map(this._mapToOption);\n    this.el.replaceChildren(...this._fillSelect(this.currentOptions));\n\n    const suggestionElements = suggestions\n      .map((suggestion, index) => {\n        const suggestionElement = document.createElement('div');\n        suggestionElement.setAttribute('role', 'option');\n        suggestionElement.setAttribute('tabindex', '0');\n        suggestionElement.setAttribute('data-index', index.toString());\n        if(suggestion.hidden) {\n          suggestionElement.setAttribute('data-hidden', \"hidden\");\n        }\n        if(suggestion.disabled) {\n          suggestionElement.setAttribute('data-disabled', \"disabled\");\n        }\n        suggestionElement.classList.add('select-a11y-suggestion');\n        suggestionElement.style.display = 'flex';\n        suggestionElement.style.justifyContent = 'space-between';\n\n        const firstColumn = document.createElement('div');\n        firstColumn.classList.add('column');\n        suggestionElement.appendChild(firstColumn);\n\n        const labelElement = document.createElement('div');\n        labelElement.classList.add('select-a11y-suggestion__label');\n        labelElement.innerText = suggestion.label || suggestion.value;\n        firstColumn.appendChild(labelElement);\n\n        // check if the option is selected\n        if (suggestion.selected) {\n          suggestionElement.setAttribute('aria-selected', 'true');\n        }\n        if (suggestion.description) {\n          const descriptionElement = document.createElement('div');\n          descriptionElement.classList.add('select-a11y-suggestion__description');\n\n          if (suggestion.showIcon) {\n            descriptionElement.setAttribute('data-show-icon', 'true');\n          }\n\n          descriptionElement.innerText = suggestion.description;\n          firstColumn.appendChild(descriptionElement);\n        }\n        if (suggestion.helper) {\n          const secondColumn = document.createElement('div');\n          secondColumn.classList.add('column');\n          secondColumn.style.textAlign = 'right';\n          suggestionElement.appendChild(secondColumn);\n\n          const helperElement = document.createElement('code');\n          helperElement.classList.add('select-a11y-suggestion__helper');\n          helperElement.innerText = suggestion.helper;\n          secondColumn.appendChild(helperElement);\n        }\n        if (suggestion.image) {\n          const image = document.createElement('img');\n          image.setAttribute('src', suggestion.image);\n          image.setAttribute('alt', suggestion.alt ? suggestion.alt : '');\n          image.classList.add('select-a11y-suggestion__image');\n          suggestionElement.prepend(image);\n        }\n        return { suggestionElement, group: suggestion.group };\n      })\n      .filter((suggestion) => !suggestion.suggestionElement.dataset.disabled && !suggestion.suggestionElement.dataset.hidden);\n    \n    const noGroupedSuggestions = [];\n    const groupedSuggestions = {};\n\n    suggestionElements.forEach(({ suggestionElement, group }) => {\n      if (group) {\n        if (!groupedSuggestions[group]) {\n          const groupDiv = document.createElement('div');\n          groupDiv.setAttribute('role', 'group');\n          groupedSuggestions[group] = groupDiv;\n          const presentation = document.createElement('div')\n          presentation.setAttribute('role', 'presentation')\n          presentation.innerHTML = group;\n          groupDiv.appendChild(presentation);\n        }\n        groupedSuggestions[group].appendChild(suggestionElement);\n      } else {\n        noGroupedSuggestions.push(suggestionElement);\n      }\n    });\n\n    this.suggestions = suggestionElements.map(({ suggestionElement }) => suggestionElement);\n\n    if(this.list) {\n      if (!this.suggestions.length) {\n        this.list.innerHTML = `<p class=\"select-a11y__no-suggestion\">${this._options.text.noResult}</p>`;\n      } else {\n        const listBox = document.createElement('div');\n        listBox.setAttribute('role', 'listbox');\n\n        if (this.multiple) {\n          listBox.setAttribute('aria-multiselectable', 'true');\n        }\n        \n        Object.values(noGroupedSuggestions).forEach((item) => {\n          listBox.appendChild(item);\n        });\n        Object.values(groupedSuggestions).forEach((group) => {\n          listBox.appendChild(group);\n        });\n        this.list.innerHTML = '';\n        this.list.appendChild(listBox);\n      }\n    }\n    this._setLiveZone();\n    return suggestions;\n  }\n\n  _fillSelect(options) {\n    const newOptions = [];\n\n    options.forEach((option) => {\n      const group = option.dataset.group;\n      if (group) {\n        const existingOptgroup = newOptions.find((opt) => opt.tagName === 'OPTGROUP' && opt.label === group);\n        if (!existingOptgroup) {\n          const optgroup = document.createElement('optgroup');\n          optgroup.label = group;\n          newOptions.push(optgroup)\n        }\n        newOptions[newOptions.length - 1].appendChild(option);\n      } else {\n        newOptions.push(option)\n      }\n    });\n    return newOptions;\n  }\n\n  _handleOpener(event) {\n    this._toggleOverlay();\n  }\n\n  _handleFocus() {\n    if (!this.open) {\n      return;\n    }\n\n    clearTimeout(this._focusTimeout);\n\n    this._focusTimeout = setTimeout(() => {\n      if (!this.overlay.contains(document.activeElement) && this.button !== document.activeElement) {\n        this._toggleOverlay(false, document.activeElement === document.body);\n      }\n      else if (document.activeElement === this.input) {\n        // reset the focus index\n        this.focusIndex = null;\n      }\n      else {\n        const optionIndex = this.suggestions.indexOf(/** @type HTMLElement */ (document.activeElement));\n\n        if (optionIndex !== -1) {\n          this.focusIndex = optionIndex;\n        }\n      }\n    }, 10);\n  }\n\n  _handleClear() {\n    this.el.value = \"\";\n    this._handleReset();\n  }\n\n  _handleReset() {\n    clearTimeout(this._resetTimeout);\n\n    this._resetTimeout = setTimeout(async () => {\n      this.search = '';\n      this.updatedOriginalOptions = Array.from(this.originalOptions);\n      this.currentOptions = Array.from(this.originalOptions);\n      await this._fillSuggestions();\n      this.el.dispatchEvent(new Event('change'));\n      this._setButtonText();\n      if (this.multiple && this._options.showSelected) {\n        this._updateSelectedList();\n      }\n    }, 10);\n  }\n\n  _handleSuggestionClick(event) {\n    const option = closest.call(event.target, '[role=\"option\"]');\n\n    if (!option) {\n      return;\n    }\n\n    const optionIndex = parseInt(option.getAttribute('data-index'), 10);\n    const shouldClose = this.multiple && event.metaKey ? false : true;\n\n    this._toggleSelection(optionIndex, shouldClose);\n  }\n\n  _handleInput() {\n    // prevent event firing on focus and blur\n    if (this.search === this.input?.value) {\n      return;\n    }\n\n    this.search = this.input?.value ?? \"\";\n    this._fillSuggestions();\n  }\n\n  _handleKeyboard(event) {\n    const option = closest.call(event.target, '[role=\"option\"]');\n    const input = closest.call(event.target, 'input');\n\n    if (event.keyCode === 27) {\n      this._toggleOverlay();\n      return;\n    }\n\n    if (input && event.keyCode === 13) {\n      event.preventDefault();\n      return;\n    }\n\n    if (event.keyCode === 40) {\n      event.preventDefault();\n      this._moveIndex(1);\n      return\n    }\n\n    if (!option) {\n      return;\n    }\n\n    if (event.keyCode === 39) {\n      event.preventDefault();\n      this._moveIndex(1);\n      return\n    }\n\n    if (event.keyCode === 37 || event.keyCode === 38) {\n      event.preventDefault();\n      this._moveIndex(-1);\n      return;\n    }\n\n    if ((!this.multiple && event.keyCode === 13) || event.keyCode === 32) {\n      event.preventDefault();\n      this._toggleSelection(parseInt(option.getAttribute('data-index'), 10), this.multiple ? false : true);\n    }\n\n    if (this.multiple && event.keyCode === 13) {\n      this._toggleOverlay();\n    }\n  }\n\n  _moveIndex(step) {\n    if (this.focusIndex === null) {\n      this.focusIndex = 0;\n    }\n    else {\n      const nextIndex = this.focusIndex + step;\n      const selectionItems = this.suggestions.length - 1;\n\n      if (nextIndex > selectionItems) {\n        this.focusIndex = 0;\n      }\n      else if (nextIndex < 0) {\n        this.focusIndex = selectionItems;\n      }\n      else {\n        this.focusIndex = nextIndex;\n      }\n    }\n\n    this.suggestions[this.focusIndex].focus();\n  }\n\n  _positionCursor() {\n    setTimeout(() => {\n      if(this.input) {\n        const endOfInput = this.input.value.length ?? 0;\n      this.input.setSelectionRange(endOfInput, endOfInput);\n      }\n    });\n  }\n\n  _removeOption(event) {\n    const button = closest.call(event.target, 'button');\n\n    if (!button) {\n      return;\n    }\n\n    const currentButtons = this.selectedList?.querySelectorAll('button');\n    const buttonPreviousIndex = Array.prototype.indexOf.call(currentButtons, button) - 1;\n    const optionIndex = parseInt(button.getAttribute('data-index'), 10);\n\n    // disable the option\n    this._toggleSelection(optionIndex);\n\n    // manage the focus if there's still the selected list\n    if (this.selectedList?.parentElement) {\n      const buttons = this.selectedList.querySelectorAll('button');\n\n      // look for the bouton before the one clicked\n      if (buttons[buttonPreviousIndex]) {\n        buttons[buttonPreviousIndex].focus();\n      }\n      // fallback to the first button in the list if there's none\n      else {\n        buttons[0].focus();\n      }\n    } else {\n      this.button.focus();\n    }\n  }\n\n  _setButtonText() {\n    const selectedOption = this.el.item(this.el.selectedIndex);\n    /** @type {HTMLElement} */\n    const child = this.button.firstElementChild;\n\n    if (selectedOption && selectedOption.value) {\n      this.button.classList.remove('select-a11y-button--no-selected-option');\n    } else {\n      this.button.classList.add('select-a11y-button--no-selected-option');\n    }\n\n    if (this.multiple) {\n      if(this._options.useLabelAsButton) {\n        child.innerText = this.label?.innerText || \"\";\n      } else {\n        child.innerHTML = \"&nbsp;\";\n      }\n    } else {\n      if (selectedOption) {\n        child.innerText = selectedOption.label || selectedOption.value;\n      }\n    }\n  }\n\n  _setLiveZone() {\n    const suggestions = this.suggestions.length;\n    let text = '';\n\n    if (this.open) {\n      if (!suggestions) {\n        text = this._options.text.noResult;\n      }\n      else {\n        text = this._options.text.results.replace('{x}', suggestions);\n      }\n    }\n\n    this.liveZone.innerText = text;\n  }\n\n  _toggleOverlay(state, focusBack) {\n    this.open = state !== undefined ? state : !this.open;\n    this.button.setAttribute('aria-expanded', this.open ? \"true\" : \"false\");\n\n    if (this.open) {\n      this._fillSuggestions();\n      this.button.insertAdjacentElement('afterend', this.overlay);\n      this.input?.focus();\n    }\n    else if (this.wrap.contains(this.overlay)) {\n      this.wrap.removeChild(this.overlay);\n\n      // reset the focus index\n      this.focusIndex = null;\n\n      // reset search values for default search\n      if (this.input && this._options.fillSuggestions === this._defaultSearch) {\n        this.input.value = '';\n      }\n      this.search = '';\n\n\n      // reset aria-live\n      this._setLiveZone();\n      if (state === undefined || focusBack) {\n        // fix bug that will trigger a click on the button when focusing directly\n        setTimeout(() => {\n          this.button.focus();\n        });\n      }\n    }\n  }\n\n  _toggleSelection(optionIndex, close = true, dispatch = true) {\n    const toggledOption = this.el.item(optionIndex);\n    if (this.multiple) {\n      if(toggledOption?.hasAttribute('selected')) {\n        toggledOption.removeAttribute('selected');\n      } else {\n        toggledOption?.setAttribute('selected', 'selected');\n      }\n    }\n    else {\n      toggledOption?.setAttribute('selected', 'selected');\n      this.el.selectedIndex = optionIndex;\n    }\n    this.updatedOriginalOptions = this.updatedOriginalOptions.map(option => {\n      if(option.value === toggledOption?.value) {\n        if(toggledOption.hasAttribute('selected')) {\n          option.setAttribute('selected', 'selected');\n        } else {\n          option.removeAttribute('selected');\n        }\n      }\n      if(!this.multiple && option.value !== toggledOption?.value) {\n        option.removeAttribute('selected');\n      }\n      return option;\n    });\n    this.suggestions = this.suggestions.map((suggestion) => {\n      const index = parseInt(suggestion.getAttribute('data-index') ?? \"\", 10);\n      const option = this.el.item(index);\n      if (option && option.selected) {\n        suggestion.setAttribute('aria-selected', 'true');\n      }\n      else {\n        suggestion.removeAttribute('aria-selected');\n      }\n      return suggestion;\n    });\n    if(dispatch) {\n      this.el.dispatchEvent(new Event('change'));\n    }\n    this._setButtonText();\n    if (this.multiple && this._options.showSelected) {\n      this._updateSelectedList();\n    }\n\n    if (close && this.open) {\n      this._toggleOverlay();\n    }\n  }\n\n  _updateSelectedList() {\n    const items = this.currentOptions.map((option, index) => {\n      if(!option.selected || option.hidden) {\n        return;\n      }\n      const text = option.label || option.value;\n\n      return `\n        <li class=\"select-a11y__selected-item\">\n          <span>${text}</span>\n          <button class=\"select-a11y-delete\" title=\"${this._options.text.deleteItem.replace('{t}', text)}\" type=\"button\" data-index=\"${index}\">\n            <span class=\"sr-only\">${this._options.text.delete}</span>\n            <span class=\"select-a11y-delete__icon\" aria-hidden=\"true\"></span>\n          </button>\n        </li>`;\n    }).filter(Boolean);\n\n    if(this.selectedList) {\n      this.selectedList.innerHTML = items.join('');\n\n      if (items.length) {\n        if (!this.selectedList?.parentElement) {\n          this.wrap.appendChild(this.selectedList);\n        }\n      } else if (this.selectedList.parentElement) {\n        this.wrap.removeChild(this.selectedList);\n      }\n    }\n  }\n\n  _wrap() {\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('select-a11y');\n    this.el.parentElement?.appendChild(wrapper);\n\n    const tagHidden = document.createElement('div');\n    tagHidden.classList.add('select-a11y__hidden');\n    tagHidden.setAttribute('aria-hidden', 'true');\n\n    if (this._options.useLabelAsButton) {\n      tagHidden.appendChild(this.label);\n    }\n    tagHidden.appendChild(this.el);\n\n    wrapper.appendChild(tagHidden);\n    wrapper.appendChild(this.liveZone);\n    wrapper.appendChild(this.button);\n    if (this._options.clearable) {\n      wrapper.appendChild(this.clearButton);\n    }\n\n    return wrapper;\n  }\n}\n\nexport default Select;\n"],"names":["text","matches","closest","s","el","SILENTLY","Select","options","passedOptions","textOptions","hasSelectedOption","option","_a","newText","value","dispatchEvent","optionIndex","shouldClose","button","clear","live","container","suggestions","list","parentOptgroup","groupLabel","suggestion","search","newOptions","suggestionElements","index","suggestionElement","firstColumn","labelElement","descriptionElement","secondColumn","helperElement","image","noGroupedSuggestions","groupedSuggestions","group","groupDiv","presentation","listBox","item","opt","optgroup","event","_b","input","step","nextIndex","selectionItems","endOfInput","currentButtons","buttonPreviousIndex","buttons","selectedOption","child","state","focusBack","close","dispatch","toggledOption","items","wrapper","tagHidden"],"mappings":"AAEA,MAAMA,IAAO;AAAA,EACX,MAAM;AAAA,EACN,aAAa;AAAA,EACb,UAAU;AAAA,EACV,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,OAAO;AACT,GAEMC,IAAU,QAAQ,UAAU;AAClC,IAAIC,IAAU,QAAQ,UAAU;AAE3BA,MACHA,IAAU,SAAUC,GAAG;AACrB,MAAIC,IAAK;AAET,KAAG;AACD,QAAIH,EAAQ,KAAKG,GAAID,CAAC;AAAG,aAAOC;AAChC,IAAAA,IAAKA,EAAG,iBAAiBA,EAAG;AAAA,EAC7B,SAAQA,MAAO,QAAQA,EAAG,aAAa;AACxC,SAAO;AACX;AAIA,MAAMC,IAAW;AAYV,MAAMC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBlB,YAAYF,GAAIG,GAAS;;AAGvB,SAAK,KAAKH,GAGV,KAAK,QAAQ,SAAS,cAAc,aAAaA,EAAG,EAAE,GAAG,GAEzD,KAAK,KAAKA,EAAG,IACb,KAAK,OAAO,IACZ,KAAK,WAAW,KAAK,GAAG,UACxB,KAAK,SAAS,IAGd,KAAK,cAAc,IAEnB,KAAK,aAAa;AAElB,UAAMI,IAAgB,OAAO,OAAO,CAAE,GAAED,CAAO,GACzCE,IAAc,OAAO,OAAO,CAAE,GAAET,GAAMQ,EAAc,IAAI;AAwB9D,QAvBA,OAAOA,EAAc,MACrB,KAAK,iBAAiB,KAAK,eAAe,KAAK,IAAI,GAEnD,KAAK,WAAW,OAAO,OAAO;AAAA,MAC5B,MAAMC;AAAA,MACN,cAAc;AAAA,MACd,iBAAiB,KAAK;AAAA,MACtB,kBAAkB;AAAA,MAClB,WAAW;AAAA,IACZ,GAAED,CAAa,GAEhB,KAAK,eAAe,KAAK,aAAa,KAAK,IAAI,GAC/C,KAAK,eAAe,KAAK,aAAa,KAAK,IAAI,GAC/C,KAAK,kBAAkB,KAAK,gBAAgB,KAAK,IAAI,GACrD,KAAK,gBAAgB,KAAK,cAAc,KAAK,IAAI,GACjD,KAAK,eAAe,KAAK,aAAa,KAAK,IAAI,GAC/C,KAAK,eAAe,KAAK,aAAa,KAAK,IAAI,GAC/C,KAAK,yBAAyB,KAAK,uBAAuB,KAAK,IAAI,GACnE,KAAK,kBAAkB,KAAK,gBAAgB,KAAK,IAAI,GACrD,KAAK,gBAAgB,KAAK,cAAc,KAAK,IAAI,GACjD,KAAK,UAAU,KAAK,QAAQ,KAAK,IAAI,GACrC,KAAK,iBAAiB,KAAK,eAAe,KAAK,IAAI,GAEhD,CAAC,KAAK,UAAU;AACjB,YAAME,IAAoB,MAAM,KAAK,KAAK,GAAG,OAAO,EAAE,KAAK,CAAAC,MAAUA,EAAO,QAAQ;AACpF,UAAI,KAAK,SAAS,oBAAoB,CAACD,GAAmB;AACxD,cAAMC,IAAS,SAAS,cAAc,QAAQ;AAC9C,QAAAA,EAAO,cAAYC,IAAA,KAAK,UAAL,gBAAAA,EAAY,cAAa,IAC5CD,EAAO,aAAa,SAAS,EAAE,GAC/BA,EAAO,aAAa,YAAY,UAAU,GAC1CA,EAAO,aAAa,YAAY,UAAU,GAC1CA,EAAO,aAAa,UAAU,QAAQ,GACtC,KAAK,GAAG,QAAQ,IAAIA,GAAQ,CAAC;AAAA,MAC9B;AAAA,IACF;AAOD,YAAQ,IAAI,MAAM,KAAK,KAAK,GAAG,OAAO,EAAE,IAAI,CAAAA,OAAW,EAAE,OAAOA,EAAO,OAAO,YAAYA,EAAO,WAAU,EAAG,CAAC,GAC/G,KAAK,kBAAmB,MAAM,KAAK,KAAK,GAAG,OAAO,GAClD,QAAQ,IAAI,MAAM,KAAK,KAAK,eAAe,EAAE,IAAI,CAAAA,OAAW,EAAE,OAAOA,EAAO,OAAO,YAAYA,EAAO,WAAU,EAAG,CAAC,GAQpH,KAAK,yBAAyB,MAAM,KAAK,KAAK,GAAG,OAAO,GAOxD,KAAK,iBAAiB,MAAM,KAAK,KAAK,GAAG,OAAO,GAEhD,KAAK,SAAQ,GACb,KAAK,SAAS,KAAK,iBACnB,KAAK,eAAc,GACnB,KAAK,cAAc,KAAK,sBACxB,KAAK,WAAW,KAAK,mBACrB,KAAK,UAAU,KAAK,kBACpB,KAAK,OAAO,KAAK,SAEb,KAAK,YAAY,KAAK,SAAS,iBACjC,KAAK,eAAe,KAAK,uBACzB,KAAK,oBAAmB,GAExB,KAAK,aAAa,iBAAiB,SAAS,KAAK,aAAa,IAGhE,KAAK,OAAO,iBAAiB,SAAS,KAAK,aAAa,GACxD,KAAK,YAAY,iBAAiB,SAAS,KAAK,YAAY,GAC5D,KAAK,KAAK,iBAAiB,WAAW,KAAK,eAAe,GAC1D,SAAS,iBAAiB,QAAQ,KAAK,cAAc,EAAI,GAErD,KAAK,GAAG,QACV,KAAK,GAAG,KAAK,iBAAiB,SAAS,KAAK,YAAY;AAAA,EAE3D;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,QAAQE,GAAS;AACf,WAAO,OAAO,KAAK,SAAS,MAAMA,CAAO;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,aAAaC,GAAOC,IAAgB,IAAM;AACxC,UAAMC,IAAc,KAAK,eAAe,UAAU,CAAAL,MAAUA,EAAO,UAAUG,CAAK;AAClF,QAAIE,MAAgB;AAClB;AAEF,UAAMC,IAAc,MAAK;AACzB,SAAK,iBAAiBD,GAAaC,GAAaF,CAAa;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,qBAAqBD,GAAO;AAC1B,SAAK,aAAaA,GAAOT,CAAQ;AAAA,EAClC;AAAA,EAGD,gBAAgB;;AACd,UAAMa,IAAS,SAAS,cAAc,QAAQ;AAC9C,IAAAA,EAAO,aAAa,QAAQ,QAAQ,GACpCA,EAAO,aAAa,iBAAiB,KAAK,OAAO,SAAS,OAAO,GACjEA,EAAO,YAAY;AACnB,UAAMlB,IAAO,SAAS,cAAc,MAAM;AAC1C,WAAAA,EAAK,YAAY,4BAEb,KAAK,SAAS,CAAC,KAAK,MAAM,OAC5B,KAAK,MAAM,KAAK,GAAG,KAAK,GAAG,EAAE,WAE/BkB,EAAO,aAAa,MAAM,KAAK,GAAG,KAAK,SAAS,GAChDA,EAAO,aAAa,qBAAmBN,IAAA,KAAK,UAAL,gBAAAA,EAAY,MAAK,MAAMM,EAAO,EAAE,GACvElB,EAAK,YAAY,UAEjBkB,EAAO,YAAYlB,CAAI,GACvBkB,EAAO,mBAAmB,aAAa,mEAAmE,GACnGA;AAAA,EACR;AAAA,EAED,qBAAqB;AACnB,UAAMC,IAAQ,SAAS,cAAc,QAAQ;AAC7C,WAAAA,EAAM,aAAa,QAAQ,QAAQ,GACnCA,EAAM,aAAa,cAAc,KAAK,SAAS,KAAK,KAAK,GACzDA,EAAM,YAAY,6BACXA;AAAA,EACR;AAAA,EAED,kBAAkB;AAChB,UAAMC,IAAO,SAAS,cAAc,GAAG;AACvC,WAAAA,EAAK,aAAa,aAAa,QAAQ,GACvCA,EAAK,UAAU,IAAI,SAAS,GAErBA;AAAA,EACR;AAAA,EAED,iBAAiB;AACf,UAAMC,IAAY,SAAS,cAAc,KAAK;AAC9C,IAAAA,EAAU,UAAU,IAAI,sBAAsB;AAE9C,UAAMC,IAAc,SAAS,cAAc,KAAK;AAChD,WAAAA,EAAY,UAAU,IAAI,yBAAyB,GACnDA,EAAY,KAAK,QAAQ,KAAK,EAAE,gBAEhCD,EAAU,YAAY;AAAA,0BACA,KAAK,EAAE,wBAAwB,KAAK,SAAS,KAAK,IAAI;AAAA,yBACvD,KAAK,EAAE,wBAAwB,KAAK,SAAS,KAAK,WAAW;AAAA,sCAChD,KAAK,EAAE,kCAAkC,KAAK,GAAG,SAAS,6EAA6E,KAAK,SAAS,KAAK,WAAW,kCAAkC,KAAK,EAAE;AAAA,OAGhPA,EAAU,YAAYC,CAAW,GAEjC,KAAK,OAAOA,GACZ,KAAK,KAAK,iBAAiB,SAAS,KAAK,sBAAsB,GAG/D,KAAK,QAAQD,EAAU,cAAc,OAAO,GAEzC,KAAK,UACN,KAAK,MAAM,iBAAiB,SAAS,KAAK,YAAY,GACtD,KAAK,MAAM,iBAAiB,SAAS,KAAK,iBAAiB,EAAI,IAG1DA;AAAA,EACR;AAAA,EAED,sBAAsB;AACpB,UAAME,IAAO,SAAS,cAAc,IAAI;AACxC,WAAAA,EAAK,YAAY,8BAEVA;AAAA,EACR;AAAA,EAED,WAAW;AACT,SAAK,GAAG,aAAa,YAAY,IAAI;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBD,iBAAiBZ,GAAQ;AACvB,UAAMa,IAAiBb,EAAO,QAAQ,UAAU,GAC1Cc,IAAaD,IAAiBA,EAAe,QAAQ;AAE3D,WAAO;AAAA,MACL,QAAQb,EAAO;AAAA,MACf,UAAUA,EAAO;AAAA,MACjB,UAAUA,EAAO,aAAa,UAAU;AAAA,MACxC,OAAOA,EAAO;AAAA,MACd,OAAOA,EAAO;AAAA,MACd,OAAOA,EAAO,QAAQ;AAAA,MACtB,KAAKA,EAAO,QAAQ;AAAA,MACpB,QAAQA,EAAO,QAAQ;AAAA,MACvB,aAAaA,EAAO,QAAQ;AAAA,MAC5B,UAAUA,EAAO,QAAQ;AAAA,MACzB,OAAOc;AAAA,IACb;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,aAAaC,GAAY;AACvB,UAAMf,IAAS,SAAS,cAAc,QAAQ;AAC9C,WAAAA,EAAO,QAAQe,EAAW,OAC1Bf,EAAO,QAAQe,EAAW,OACvBA,EAAW,UACZf,EAAO,aAAa,UAAU,QAAQ,GAErCe,EAAW,YACZf,EAAO,aAAa,YAAY,UAAU,GAEzCe,EAAW,YACZf,EAAO,aAAa,YAAY,UAAU,GAEzCe,EAAW,UACZf,EAAO,QAAQ,QAAQe,EAAW,QAEjCA,EAAW,QACZf,EAAO,QAAQ,MAAMe,EAAW,MAE/BA,EAAW,gBACZf,EAAO,QAAQ,cAAce,EAAW,cAEtCA,EAAW,WACbf,EAAO,QAAQ,SAASe,EAAW,SAEjCA,EAAW,aACbf,EAAO,QAAQ,WAAWe,EAAW,WAEnCA,EAAW,UACbf,EAAO,QAAQ,QAAQe,EAAW,QAE7Bf;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaD,eAAegB,GAAQpB,GAAS;AAC9B,UAAMqB,IAAarB,EAAQ,OAAO,CAAAI,OACnBA,EAAO,SAASA,EAAO,OACxB,kBAAmB,EAAC,QAAQgB,CAAM,MAAM,EACrD,EAAE,IAAI,KAAK,gBAAgB;AAC5B,WAAO,QAAQ,QAAQC,CAAU;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,MAAM,mBAAmB;AACvB,UAAMD,IAAS,KAAK,OAAO,YAAW,GAGhCL,IAAc,MAAM,KAAK,SAAS,gBAAgBK,GAAQ,KAAK,sBAAsB;AAC3F,SAAK,iBAAiBL,EAAY,IAAI,KAAK,YAAY,GACvD,KAAK,GAAG,gBAAgB,GAAG,KAAK,YAAY,KAAK,cAAc,CAAC;AAEhE,UAAMO,IAAqBP,EACxB,IAAI,CAACI,GAAYI,MAAU;AAC1B,YAAMC,IAAoB,SAAS,cAAc,KAAK;AACtD,MAAAA,EAAkB,aAAa,QAAQ,QAAQ,GAC/CA,EAAkB,aAAa,YAAY,GAAG,GAC9CA,EAAkB,aAAa,cAAcD,EAAM,SAAU,CAAA,GAC1DJ,EAAW,UACZK,EAAkB,aAAa,eAAe,QAAQ,GAErDL,EAAW,YACZK,EAAkB,aAAa,iBAAiB,UAAU,GAE5DA,EAAkB,UAAU,IAAI,wBAAwB,GACxDA,EAAkB,MAAM,UAAU,QAClCA,EAAkB,MAAM,iBAAiB;AAEzC,YAAMC,IAAc,SAAS,cAAc,KAAK;AAChD,MAAAA,EAAY,UAAU,IAAI,QAAQ,GAClCD,EAAkB,YAAYC,CAAW;AAEzC,YAAMC,IAAe,SAAS,cAAc,KAAK;AASjD,UARAA,EAAa,UAAU,IAAI,+BAA+B,GAC1DA,EAAa,YAAYP,EAAW,SAASA,EAAW,OACxDM,EAAY,YAAYC,CAAY,GAGhCP,EAAW,YACbK,EAAkB,aAAa,iBAAiB,MAAM,GAEpDL,EAAW,aAAa;AAC1B,cAAMQ,IAAqB,SAAS,cAAc,KAAK;AACvD,QAAAA,EAAmB,UAAU,IAAI,qCAAqC,GAElER,EAAW,YACbQ,EAAmB,aAAa,kBAAkB,MAAM,GAG1DA,EAAmB,YAAYR,EAAW,aAC1CM,EAAY,YAAYE,CAAkB;AAAA,MAC3C;AACD,UAAIR,EAAW,QAAQ;AACrB,cAAMS,IAAe,SAAS,cAAc,KAAK;AACjD,QAAAA,EAAa,UAAU,IAAI,QAAQ,GACnCA,EAAa,MAAM,YAAY,SAC/BJ,EAAkB,YAAYI,CAAY;AAE1C,cAAMC,IAAgB,SAAS,cAAc,MAAM;AACnD,QAAAA,EAAc,UAAU,IAAI,gCAAgC,GAC5DA,EAAc,YAAYV,EAAW,QACrCS,EAAa,YAAYC,CAAa;AAAA,MACvC;AACD,UAAIV,EAAW,OAAO;AACpB,cAAMW,IAAQ,SAAS,cAAc,KAAK;AAC1C,QAAAA,EAAM,aAAa,OAAOX,EAAW,KAAK,GAC1CW,EAAM,aAAa,OAAOX,EAAW,MAAMA,EAAW,MAAM,EAAE,GAC9DW,EAAM,UAAU,IAAI,+BAA+B,GACnDN,EAAkB,QAAQM,CAAK;AAAA,MAChC;AACD,aAAO,EAAE,mBAAAN,GAAmB,OAAOL,EAAW,MAAK;AAAA,IAC3D,CAAO,EACA,OAAO,CAACA,MAAe,CAACA,EAAW,kBAAkB,QAAQ,YAAY,CAACA,EAAW,kBAAkB,QAAQ,MAAM,GAElHY,IAAuB,CAAA,GACvBC,IAAqB,CAAA;AAqB3B,QAnBAV,EAAmB,QAAQ,CAAC,EAAE,mBAAAE,GAAmB,OAAAS,EAAK,MAAO;AAC3D,UAAIA,GAAO;AACT,YAAI,CAACD,EAAmBC,CAAK,GAAG;AAC9B,gBAAMC,IAAW,SAAS,cAAc,KAAK;AAC7C,UAAAA,EAAS,aAAa,QAAQ,OAAO,GACrCF,EAAmBC,CAAK,IAAIC;AAC5B,gBAAMC,IAAe,SAAS,cAAc,KAAK;AACjD,UAAAA,EAAa,aAAa,QAAQ,cAAc,GAChDA,EAAa,YAAYF,GACzBC,EAAS,YAAYC,CAAY;AAAA,QAClC;AACD,QAAAH,EAAmBC,CAAK,EAAE,YAAYT,CAAiB;AAAA,MAC/D;AACQ,QAAAO,EAAqB,KAAKP,CAAiB;AAAA,IAEnD,CAAK,GAED,KAAK,cAAcF,EAAmB,IAAI,CAAC,EAAE,mBAAAE,EAAiB,MAAOA,CAAiB,GAEnF,KAAK;AACN,UAAI,CAAC,KAAK,YAAY;AACpB,aAAK,KAAK,YAAY,yCAAyC,KAAK,SAAS,KAAK,QAAQ;AAAA,WACrF;AACL,cAAMY,IAAU,SAAS,cAAc,KAAK;AAC5C,QAAAA,EAAQ,aAAa,QAAQ,SAAS,GAElC,KAAK,YACPA,EAAQ,aAAa,wBAAwB,MAAM,GAGrD,OAAO,OAAOL,CAAoB,EAAE,QAAQ,CAACM,MAAS;AACpD,UAAAD,EAAQ,YAAYC,CAAI;AAAA,QAClC,CAAS,GACD,OAAO,OAAOL,CAAkB,EAAE,QAAQ,CAACC,MAAU;AACnD,UAAAG,EAAQ,YAAYH,CAAK;AAAA,QACnC,CAAS,GACD,KAAK,KAAK,YAAY,IACtB,KAAK,KAAK,YAAYG,CAAO;AAAA,MAC9B;AAEH,gBAAK,aAAY,GACVrB;AAAA,EACR;AAAA,EAED,YAAYf,GAAS;AACnB,UAAMqB,IAAa,CAAA;AAEnB,WAAArB,EAAQ,QAAQ,CAACI,MAAW;AAC1B,YAAM6B,IAAQ7B,EAAO,QAAQ;AAC7B,UAAI6B,GAAO;AAET,YAAI,CADqBZ,EAAW,KAAK,CAACiB,MAAQA,EAAI,YAAY,cAAcA,EAAI,UAAUL,CAAK,GAC5E;AACrB,gBAAMM,IAAW,SAAS,cAAc,UAAU;AAClD,UAAAA,EAAS,QAAQN,GACjBZ,EAAW,KAAKkB,CAAQ;AAAA,QACzB;AACD,QAAAlB,EAAWA,EAAW,SAAS,CAAC,EAAE,YAAYjB,CAAM;AAAA,MAC5D;AACQ,QAAAiB,EAAW,KAAKjB,CAAM;AAAA,IAE9B,CAAK,GACMiB;AAAA,EACR;AAAA,EAED,cAAcmB,GAAO;AACnB,SAAK,eAAc;AAAA,EACpB;AAAA,EAED,eAAe;AACb,IAAK,KAAK,SAIV,aAAa,KAAK,aAAa,GAE/B,KAAK,gBAAgB,WAAW,MAAM;AACpC,UAAI,CAAC,KAAK,QAAQ,SAAS,SAAS,aAAa,KAAK,KAAK,WAAW,SAAS;AAC7E,aAAK,eAAe,IAAO,SAAS,kBAAkB,SAAS,IAAI;AAAA,eAE5D,SAAS,kBAAkB,KAAK;AAEvC,aAAK,aAAa;AAAA,WAEf;AACH,cAAM/B,IAAc,KAAK,YAAY;AAAA;AAAA,UAAkC,SAAS;AAAA;AAEhF,QAAIA,MAAgB,OAClB,KAAK,aAAaA;AAAA,MAErB;AAAA,IACF,GAAE,EAAE;AAAA,EACN;AAAA,EAED,eAAe;AACb,SAAK,GAAG,QAAQ,IAChB,KAAK,aAAY;AAAA,EAClB;AAAA,EAED,eAAe;AACb,iBAAa,KAAK,aAAa,GAE/B,KAAK,gBAAgB,WAAW,YAAY;AAC1C,WAAK,SAAS,IACd,KAAK,yBAAyB,MAAM,KAAK,KAAK,eAAe,GAC7D,KAAK,iBAAiB,MAAM,KAAK,KAAK,eAAe,GACrD,MAAM,KAAK,oBACX,KAAK,GAAG,cAAc,IAAI,MAAM,QAAQ,CAAC,GACzC,KAAK,eAAc,GACf,KAAK,YAAY,KAAK,SAAS,gBACjC,KAAK,oBAAmB;AAAA,IAE3B,GAAE,EAAE;AAAA,EACN;AAAA,EAED,uBAAuB+B,GAAO;AAC5B,UAAMpC,IAAST,EAAQ,KAAK6C,EAAM,QAAQ,iBAAiB;AAE3D,QAAI,CAACpC;AACH;AAGF,UAAMK,IAAc,SAASL,EAAO,aAAa,YAAY,GAAG,EAAE,GAC5DM,IAAc,OAAK,YAAY8B,EAAM;AAE3C,SAAK,iBAAiB/B,GAAaC,CAAW;AAAA,EAC/C;AAAA,EAED,eAAe;;AAEb,IAAI,KAAK,aAAWL,IAAA,KAAK,UAAL,gBAAAA,EAAY,WAIhC,KAAK,WAASoC,IAAA,KAAK,UAAL,gBAAAA,EAAY,UAAS,IACnC,KAAK,iBAAgB;AAAA,EACtB;AAAA,EAED,gBAAgBD,GAAO;AACrB,UAAMpC,IAAST,EAAQ,KAAK6C,EAAM,QAAQ,iBAAiB,GACrDE,IAAQ/C,EAAQ,KAAK6C,EAAM,QAAQ,OAAO;AAEhD,QAAIA,EAAM,YAAY,IAAI;AACxB,WAAK,eAAc;AACnB;AAAA,IACD;AAED,QAAIE,KAASF,EAAM,YAAY,IAAI;AACjC,MAAAA,EAAM,eAAc;AACpB;AAAA,IACD;AAED,QAAIA,EAAM,YAAY,IAAI;AACxB,MAAAA,EAAM,eAAc,GACpB,KAAK,WAAW,CAAC;AACjB;AAAA,IACD;AAED,QAAKpC,GAIL;AAAA,UAAIoC,EAAM,YAAY,IAAI;AACxB,QAAAA,EAAM,eAAc,GACpB,KAAK,WAAW,CAAC;AACjB;AAAA,MACD;AAED,UAAIA,EAAM,YAAY,MAAMA,EAAM,YAAY,IAAI;AAChD,QAAAA,EAAM,eAAc,GACpB,KAAK,WAAW,EAAE;AAClB;AAAA,MACD;AAED,OAAK,CAAC,KAAK,YAAYA,EAAM,YAAY,MAAOA,EAAM,YAAY,QAChEA,EAAM,eAAc,GACpB,KAAK,iBAAiB,SAASpC,EAAO,aAAa,YAAY,GAAG,EAAE,GAAG,MAAK,QAAuB,IAGjG,KAAK,YAAYoC,EAAM,YAAY,MACrC,KAAK,eAAc;AAAA;AAAA,EAEtB;AAAA,EAED,WAAWG,GAAM;AACf,QAAI,KAAK,eAAe;AACtB,WAAK,aAAa;AAAA,SAEf;AACH,YAAMC,IAAY,KAAK,aAAaD,GAC9BE,IAAiB,KAAK,YAAY,SAAS;AAEjD,MAAID,IAAYC,IACd,KAAK,aAAa,IAEXD,IAAY,IACnB,KAAK,aAAaC,IAGlB,KAAK,aAAaD;AAAA,IAErB;AAED,SAAK,YAAY,KAAK,UAAU,EAAE,MAAK;AAAA,EACxC;AAAA,EAED,kBAAkB;AAChB,eAAW,MAAM;AACf,UAAG,KAAK,OAAO;AACb,cAAME,IAAa,KAAK,MAAM,MAAM,UAAU;AAChD,aAAK,MAAM,kBAAkBA,GAAYA,CAAU;AAAA,MAClD;AAAA,IACP,CAAK;AAAA,EACF;AAAA,EAED,cAAcN,GAAO;;AACnB,UAAM7B,IAAShB,EAAQ,KAAK6C,EAAM,QAAQ,QAAQ;AAElD,QAAI,CAAC7B;AACH;AAGF,UAAMoC,KAAiB1C,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,iBAAiB,WACrD2C,IAAsB,MAAM,UAAU,QAAQ,KAAKD,GAAgBpC,CAAM,IAAI,GAC7EF,IAAc,SAASE,EAAO,aAAa,YAAY,GAAG,EAAE;AAMlE,QAHA,KAAK,iBAAiBF,CAAW,IAG7BgC,IAAA,KAAK,iBAAL,QAAAA,EAAmB,eAAe;AACpC,YAAMQ,IAAU,KAAK,aAAa,iBAAiB,QAAQ;AAG3D,MAAIA,EAAQD,CAAmB,IAC7BC,EAAQD,CAAmB,EAAE,UAI7BC,EAAQ,CAAC,EAAE;IAEnB;AACM,WAAK,OAAO;EAEf;AAAA,EAED,iBAAiB;;AACf,UAAMC,IAAiB,KAAK,GAAG,KAAK,KAAK,GAAG,aAAa,GAEnDC,IAAQ,KAAK,OAAO;AAE1B,IAAID,KAAkBA,EAAe,QACnC,KAAK,OAAO,UAAU,OAAO,wCAAwC,IAErE,KAAK,OAAO,UAAU,IAAI,wCAAwC,GAGhE,KAAK,WACJ,KAAK,SAAS,mBACfC,EAAM,cAAY9C,IAAA,KAAK,UAAL,gBAAAA,EAAY,cAAa,KAE3C8C,EAAM,YAAY,WAGhBD,MACFC,EAAM,YAAYD,EAAe,SAASA,EAAe;AAAA,EAG9D;AAAA,EAED,eAAe;AACb,UAAMnC,IAAc,KAAK,YAAY;AACrC,QAAItB,IAAO;AAEX,IAAI,KAAK,SACFsB,IAIHtB,IAAO,KAAK,SAAS,KAAK,QAAQ,QAAQ,OAAOsB,CAAW,IAH5DtB,IAAO,KAAK,SAAS,KAAK,WAO9B,KAAK,SAAS,YAAYA;AAAA,EAC3B;AAAA,EAED,eAAe2D,GAAOC,GAAW;;AAC/B,SAAK,OAAOD,MAAU,SAAYA,IAAQ,CAAC,KAAK,MAChD,KAAK,OAAO,aAAa,iBAAiB,KAAK,OAAO,SAAS,OAAO,GAElE,KAAK,QACP,KAAK,iBAAgB,GACrB,KAAK,OAAO,sBAAsB,YAAY,KAAK,OAAO,IAC1D/C,IAAA,KAAK,UAAL,QAAAA,EAAY,WAEL,KAAK,KAAK,SAAS,KAAK,OAAO,MACtC,KAAK,KAAK,YAAY,KAAK,OAAO,GAGlC,KAAK,aAAa,MAGd,KAAK,SAAS,KAAK,SAAS,oBAAoB,KAAK,mBACvD,KAAK,MAAM,QAAQ,KAErB,KAAK,SAAS,IAId,KAAK,aAAY,IACb+C,MAAU,UAAaC,MAEzB,WAAW,MAAM;AACf,WAAK,OAAO;IACtB,CAAS;AAAA,EAGN;AAAA,EAED,iBAAiB5C,GAAa6C,IAAQ,IAAMC,IAAW,IAAM;AAC3D,UAAMC,IAAgB,KAAK,GAAG,KAAK/C,CAAW;AAC9C,IAAI,KAAK,WACJ+C,KAAA,QAAAA,EAAe,aAAa,cAC7BA,EAAc,gBAAgB,UAAU,IAExCA,KAAA,QAAAA,EAAe,aAAa,YAAY,eAI1CA,KAAA,QAAAA,EAAe,aAAa,YAAY,aACxC,KAAK,GAAG,gBAAgB/C,IAE1B,KAAK,yBAAyB,KAAK,uBAAuB,IAAI,CAAAL,OACzDA,EAAO,WAAUoD,KAAA,gBAAAA,EAAe,WAC9BA,EAAc,aAAa,UAAU,IACtCpD,EAAO,aAAa,YAAY,UAAU,IAE1CA,EAAO,gBAAgB,UAAU,IAGlC,CAAC,KAAK,YAAYA,EAAO,WAAUoD,KAAA,gBAAAA,EAAe,UACnDpD,EAAO,gBAAgB,UAAU,GAE5BA,EACR,GACD,KAAK,cAAc,KAAK,YAAY,IAAI,CAACe,MAAe;AACtD,YAAMI,IAAQ,SAASJ,EAAW,aAAa,YAAY,KAAK,IAAI,EAAE,GAChEf,IAAS,KAAK,GAAG,KAAKmB,CAAK;AACjC,aAAInB,KAAUA,EAAO,WACnBe,EAAW,aAAa,iBAAiB,MAAM,IAG/CA,EAAW,gBAAgB,eAAe,GAErCA;AAAA,IACb,CAAK,GACEoC,KACD,KAAK,GAAG,cAAc,IAAI,MAAM,QAAQ,CAAC,GAE3C,KAAK,eAAc,GACf,KAAK,YAAY,KAAK,SAAS,gBACjC,KAAK,oBAAmB,GAGtBD,KAAS,KAAK,QAChB,KAAK,eAAc;AAAA,EAEtB;AAAA,EAED,sBAAsB;;AACpB,UAAMG,IAAQ,KAAK,eAAe,IAAI,CAACrD,GAAQmB,MAAU;AACvD,UAAG,CAACnB,EAAO,YAAYA,EAAO;AAC5B;AAEF,YAAMX,IAAOW,EAAO,SAASA,EAAO;AAEpC,aAAO;AAAA;AAAA,kBAEKX,CAAI;AAAA,sDACgC,KAAK,SAAS,KAAK,WAAW,QAAQ,OAAOA,CAAI,CAAC,+BAA+B8B,CAAK;AAAA,oCACxG,KAAK,SAAS,KAAK,MAAM;AAAA;AAAA;AAAA;AAAA,IAI7D,CAAK,EAAE,OAAO,OAAO;AAEjB,IAAG,KAAK,iBACN,KAAK,aAAa,YAAYkC,EAAM,KAAK,EAAE,GAEvCA,EAAM,UACHpD,IAAA,KAAK,iBAAL,QAAAA,EAAmB,iBACtB,KAAK,KAAK,YAAY,KAAK,YAAY,IAEhC,KAAK,aAAa,iBAC3B,KAAK,KAAK,YAAY,KAAK,YAAY;AAAA,EAG5C;AAAA,EAED,QAAQ;;AACN,UAAMqD,IAAU,SAAS,cAAc,KAAK;AAC5C,IAAAA,EAAQ,UAAU,IAAI,aAAa,IACnCrD,IAAA,KAAK,GAAG,kBAAR,QAAAA,EAAuB,YAAYqD;AAEnC,UAAMC,IAAY,SAAS,cAAc,KAAK;AAC9C,WAAAA,EAAU,UAAU,IAAI,qBAAqB,GAC7CA,EAAU,aAAa,eAAe,MAAM,GAExC,KAAK,SAAS,oBAChBA,EAAU,YAAY,KAAK,KAAK,GAElCA,EAAU,YAAY,KAAK,EAAE,GAE7BD,EAAQ,YAAYC,CAAS,GAC7BD,EAAQ,YAAY,KAAK,QAAQ,GACjCA,EAAQ,YAAY,KAAK,MAAM,GAC3B,KAAK,SAAS,aAChBA,EAAQ,YAAY,KAAK,WAAW,GAG/BA;AAAA,EACR;AACH;"}